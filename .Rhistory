install.packages(c("googlesheets4", "dplyr"))
knitr::opts_chunk$set(echo = TRUE)
logi1 <- c(T,TRUE,F,FALSE,FALSE)
library(googlesheets4)
install.packages("googlesheets4")
library(googlesheets4)
`出席狀況表單網址` <- "https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit#gid=458686645" # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
knitr::opts_chunk$set(echo = TRUE)
vectorExample <- c(2,6,7) #之前教的
listExample <- list(2,6,7) #新的list
print(vectorExample)
print(listExample)
#用vector儲存
c("2020-03-31T13:40:55Z",
"一芳",
"2",
"水果茶"
)
#用list儲存
library(lubridate)
list(ymd_hms("2020-03-31T13:40:55Z"), #DateTime
"一芳", #character
2, #numeric
"水果茶" #character
)
#用vector儲存
c("2020-03-31T13:40:55Z",
"一芳",
"2",
"水果茶"
)
#用list儲存
library(lubridate)
`小明交易1` <- list(
ymd_hms("2020-03-31T13:40:55Z"), #DateTime
"一芳", #character
2, #numeric
"水果茶" #character
)
c(
c("108學年第1學期","高級會計學","高等統計學"),
c( "108學年第2學期","食在拉丁美洲")
)
list(
c("108學年第1學期","高級會計學","高等統計學"), #向量一
c( "108學年第2學期","食在拉丁美洲") #向量二
)
#用list則可以分成atomic vector 1&2
`小明108學年課表A`<- list(
c("108學年第1學期","高級會計學","高等統計學"), #向量一
c( "108學年第2學期","食在拉丁美洲") #向量二
)
#用list則可以分成atomic vector 1&2 ，但其實裡面的內容不變
# list含兩個lists
`小明108學年課表B` <- list(
list("108-1","高級會計學","高等統計學"),
list("108-2","食在拉丁美洲")
)
print(`小明108學年課表B`)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
`小明108學年課表D` <- list(
`上學期`=list(
semester=c("108-1"), # 可只寫 "108-1"
courses=c("高級會計學","高等統計學")
),
`下學期`=list(
semester=c("108-2"),
courses=c("食在拉丁美洲")
)
)
print(`小明108學年課表D`)
commit <- list(
author = list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")
)
)
commit <- list(
author = list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")),
commiter = list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")),
message = list("update")
)
commit <- list(
author = list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")),
commiter = list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")),
message = list("update")
)
print(commit)
commit <- list(
author = list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")),
commiter = list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")),
message = "update"
)
print(commit)
commit <- list(
author = list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")),
commiter = list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")),
message = "update"
)
print(commit)
browseURL("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits")
install.packages("jsonlite")
browseURL("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits")
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(commit)
`小明修課紀錄`<- list(
108-1 = list(
`小明修課紀錄`<- list(
`108-1` = list(
list(
name= "個體經濟學",
teacher= "Alice",
score=85)),
list(
name="總體經濟學",
teacher="Mark",
score=73),
108-2= list(
`小明修課紀錄`<- list(
`108-1` = list(
list(
name= "個體經濟學",
teacher= "Alice",
score=85)),
list(
name="總體經濟學",
teacher="Mark",
score=73),
`108-2`= list(
name="作業研究",
teacher="Jason",
score="90")
)
print(`小明修課紀錄`)
library(lubridate)
TaipeiCity <- list(
date= list(
today= ymd("2020-03-31"),
tomorrow= ymd("2020-04-01")),
MaxT = 25,
minT = 18)
NewTaipeiCity <- list(
date= list(
today=ymd("2020-03-31"),
tomorrow=ymd("2020-04-01")),
MaxT=24,
minT=15)
library(lubridate)
TaipeiCity <- list(
date= list(
today= ymd("2020-03-31"),
tomorrow= ymd("2020-04-01")),
MaxT = 25,
minT = 18)
NewTaipeiCity <- list(
date= list(
today=ymd("2020-03-31"),
tomorrow=ymd("2020-04-01")),
MaxT=24,
minT=15)
print(TaipeiCity)
print(NewTaipeiCity)
library(lubridate)
`TaipeiCity` <- list(
date= list(
today= ymd("2020-03-31"),
tomorrow= ymd("2020-04-01")),
MaxT = 25,
minT = 18)
`NewTaipeiCity` <- list(
date= list(
today=ymd("2020-03-31"),
tomorrow=ymd("2020-04-01")),
MaxT=24,
minT=15)
print(`TaipeiCity`)
print(`NewTaipeiCity`)
commit <- list(
author = list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")),
commiter = list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")),
message = "update"
)
print(commit)
library(lubridate)
TaipeiCity <- list(
date= list(
today= ymd("2020-03-31"),
tomorrow= ymd("2020-04-01")),
MaxT = 25,
minT = 18)
NewTaipeiCity <- list(
date= list(
today=ymd("2020-03-31"),
tomorrow=ymd("2020-04-01")),
MaxT=24,
minT=15)
print(TaipeiCity)
print(NewTaipeiCity)
View(NewTaipeiCity)
knitr::opts_chunk$set(echo = TRUE)
str(listExample$course_info)
knitr::opts_chunk$set(echo = TRUE)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample[[1]]
vectorExample[[3]]
#從旁邊的放大鏡看可以發現其實實際上只有兩個可以選:student 跟學期
listExample <-
list(
student="小明",
course_info=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
tainanSportsMap[[1]]
tainanSportsMap[[1076]]
# 有多少名字可選：
names(listExample)
listExample$student
listExample$course_info
str(listExample) #用來看資料的結構
str(listExample$course_info)
listExample[["student"]]
listExample$student
listExample[["學期"]] # 小心不是反頓點喔。
listExample$`學期`
listExample[["student"]]
listExample$student
listExample[["course_info"]] # 小心不是反頓點喔。
listExample$course_info
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
student <- "student"
student <- "student"
listExample[[student]]
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
newTaipeiCityVaccin[[1]]
length(newTaipeiCityVaccine)
newTaipeiCityVaccine[[1]]
length(newTaipeiCityVaccine)
newTaipeiCityVaccine[[1]]
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]])
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]])
str(newTaipeiCityVaccine$result)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine$result)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]], max.level = 1)
str(newTaipeiCityVaccine$result)
str(newTaipeiCityVaccine[[2]], max.level = 1)
str(newTaipeiCityVaccine$result, max.level = 1)
str(newTaipeiCityVaccine[["result"]], max.level = 1)
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)])
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)],max.level = 1)
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)],max.level = 1)
str(listExample[c(2,1)],max.level = 1)
str(tainanSportsMap)
str(tainanSportsMap,max.level = 1)
str(tainanSportsMap[c(1,382,1076)],max.level = 1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("course_info")]
listExample[c("student","course_info")]
# 顯示到第一層
str(listExample, max.level=1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("course_info")]
listExample[c("student","course_info")]
listExample[c("course_info","student")]
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
View(taipeiNightMarkets)
str(taipeiNightMarkets,max.level = 1)
str(taipeiNightMarkets,max.level = 1)
taipeiNightMarkets[c("寧夏觀光夜市","華西街觀光夜市")]
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
str(listExample[c(F,T)]) # 不要，要
length(taipeiNightMarkets)
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,T)]
length(taipeiNightMarkets)
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,T),max.level=1]
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,T)]
names(taipeiNightMarkets)
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,T)]
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,T)],max.level = 1)
selectedMarkets<- rep(F,14)
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,T) ->selectedMarkets
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,T)],max.level = 1)
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- TRUE
selectedMarkets
selectedMarkets<- rep(F,14) #repeat F by 14 times
print(selectedMarkets)
str(taipeiNightMarkets[selectedMarkets],max.level = 1)
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,T) ->selectedMarkets
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,T)],max.level = 1)
str(taipeiNightMarkets[selectedMarkets],max.level = 1)
str(listExample,max.level = 3)
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 #學期拿出來，有三個元素的list
str(listExample,max.level = 3)
str(get1)
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 #學期拿出來，有三個元素的list
str(listExample,max.level = 3)
str(get1)
#get1 #學期拿出來，有三個元素的list
str(listExample,max.level = 3)
str(get1)
get1 <- listExample["course_info"]
str(get1)
get1 <- listExample[["course_info"]]
get2 <- listExample["course_info"]
#get1 #學期拿出來，有三個元素的list
str(listExample,max.level = 3)
get2 # listExample 只留下 學期元素，是個只有一個元素的list
str(get2)
get2 <- listExample["course_info"]  # listExample 只留下 學期元素，是個只有一個元素的list
str(get2,max.level = 1)
str(get2,max.level = 2)
str(listExample,max.level = 3)
str(get1,max.level = 1)
str(get2,max.level = 2)
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2
# 相當於
numVector[c(1,4)][[1]]
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2
# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)]
names[econOnly]
econOnly
econOnly <- majors[c(T,T,F,F,T)]
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
fromJSON("https://www.dropbox.com/s/3of3hxzt86oyci8/Gamemaster.json?dl=1", simplifyDataFrame = F) -> Gamemaster
